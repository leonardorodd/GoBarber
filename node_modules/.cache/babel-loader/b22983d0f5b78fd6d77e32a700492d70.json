{"ast":null,"code":"var _jsxFileName = \"/home/leonrod/Documents/gobarber-web/src/pages/SignIn/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signInRequest } from '../../store/modules/auth/actions';\nimport logo from \"../../assets/logo.svg\"; // schema de validação do Yup\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email('Insira um e-mail válido').required('O e-mail é obrigatório'),\n  password: Yup.string().required('A senha é obrigatória')\n});\nexport default function SignIn() {\n  const dispatch = useDispatch();\n\n  function handleSubmit(formData) {\n    const {\n      email,\n      password\n    } = formData;\n    dispatch(signInRequest(email, password)); //console.tron.log(data);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Go Barber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    schema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Seu e-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Sua senha secreta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Acessar\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Criar Conta gratuita\")));\n}","map":{"version":3,"sources":["/home/leonrod/Documents/gobarber-web/src/pages/SignIn/index.js"],"names":["React","Link","Form","Input","Yup","useDispatch","useSelector","signInRequest","schema","object","shape","email","string","required","password","SignIn","dispatch","handleSubmit","formData","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,oBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,aAAT,QAA8B,kCAA9B;0CAGA;;AAEA,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,KAAK,EAAEP,GAAG,CAACQ,MAAJ,GAAaD,KAAb,CAAmB,yBAAnB,EAA8CE,QAA9C,CAAuD,wBAAvD,CADyB;AAEhCC,EAAAA,QAAQ,EAAEV,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB;AAFsB,CAAnB,CAAf;AAMA,eAAe,SAASE,MAAT,GAAkB;AAE/B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,WAASY,YAAT,CAAsBC,QAAtB,EAAgC;AAE9B,UAAM;AAAEP,MAAAA,KAAF;AAASG,MAAAA;AAAT,QAAsBI,QAA5B;AAEAF,IAAAA,QAAQ,CAACT,aAAa,CAACI,KAAD,EAAQG,QAAR,CAAd,CAAR,CAJ8B,CAM9B;AACD;;AAED,sBACE,uDACE;AAAK,IAAA,GAAG,EAAEK,IAAV;AAAgB,IAAA,GAAG,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAA8B,IAAA,MAAM,EAAET,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,CAFF,CADF;AAYD","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signInRequest } from '../../store/modules/auth/actions';\nimport logo from '../../assets/logo.svg';\n\n// schema de validação do Yup\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email('Insira um e-mail válido').required('O e-mail é obrigatório'),\n  password: Yup.string().required('A senha é obrigatória'),\n});\n\n\nexport default function SignIn() {\n\n  const dispatch = useDispatch()\n\n  function handleSubmit(formData) {\n\n    const { email, password } = formData;\n\n    dispatch(signInRequest(email, password))\n\n    //console.tron.log(data);\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"Go Barber\" />\n      <Form onSubmit={handleSubmit} schema={schema}>\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n        <Input name=\"password\" type=\"password\" placeholder=\"Sua senha secreta\" />\n\n        <button type=\"submit\">Acessar</button>\n        <Link to='register'>Criar Conta gratuita</Link>\n      </Form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}