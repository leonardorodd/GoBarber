{"ast":null,"code":"var _jsxFileName = \"/home/leonrod/Documents/gobarber-web/src/pages/SignUp/index.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport logo from \"../../assets/logo.svg\";\nimport { signUpRequest } from '../../store/modules/auth/actions'; // schema de validação do Yup\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('O nome é obrigatório'),\n  email: Yup.string().email('Insira um e-mail válido').required('O e-mail é obrigatório'),\n  password: Yup.string().required('A senha é obrigatória')\n});\nexport default function SignUp() {\n  const dispatch = useDispatch();\n\n  function handleSubmit(data) {\n    const {\n      name,\n      email,\n      password\n    } = data;\n    dispatch(signUpRequest(name, email, password));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Go Barber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    schema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    placeholder: \"Seu nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Seu e-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Sua senha secreta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, loading ? 'Cadastrar' : 'Carregando...'), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"J\\xE1 tenho conta\")));\n}","map":{"version":3,"sources":["/home/leonrod/Documents/gobarber-web/src/pages/SignUp/index.js"],"names":["React","useDispatch","useSelector","Link","Form","Input","Yup","signUpRequest","schema","object","shape","name","string","required","email","password","SignUp","dispatch","handleSubmit","data","logo","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,oBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAGA,SAASC,aAAT,QAA8B,kCAA9B,C,CAEA;;AAEA,MAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CAD0B;AAEhCC,EAAAA,KAAK,EAAER,GAAG,CAACM,MAAJ,GAAaE,KAAb,CAAmB,yBAAnB,EAA8CD,QAA9C,CAAuD,wBAAvD,CAFyB;AAGhCE,EAAAA,QAAQ,EAAET,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB;AAHsB,CAAnB,CAAf;AAOA,eAAe,SAASG,MAAT,GAAkB;AAE/B,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,WAASiB,YAAT,CAAsBC,IAAtB,EAA4B;AAE1B,UAAM;AAAER,MAAAA,IAAF;AAAQG,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA4BI,IAAlC;AAEAF,IAAAA,QAAQ,CAACV,aAAa,CAACI,IAAD,EAAOG,KAAP,EAAcC,QAAd,CAAd,CAAR;AAED;;AAED,sBACE,uDACE;AAAK,IAAA,GAAG,EAAEK,IAAV;AAAgB,IAAA,GAAG,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAA8B,IAAA,MAAM,EAAEV,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBa,OAAO,GAAG,WAAH,GAAiB,eAA/C,CALF,eAME,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANF,CAFF,CADF;AAaD","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\n\nimport logo from '../../assets/logo.svg';\nimport { signUpRequest } from '../../store/modules/auth/actions';\n\n// schema de validação do Yup\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('O nome é obrigatório'),\n  email: Yup.string().email('Insira um e-mail válido').required('O e-mail é obrigatório'),\n  password: Yup.string().required('A senha é obrigatória'),\n});\n\n\nexport default function SignUp() {\n\n  const dispatch = useDispatch();\n\n  function handleSubmit(data) {\n\n    const { name, email, password } = data;\n\n    dispatch(signUpRequest(name, email, password))\n\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"Go Barber\" />\n      <Form onSubmit={handleSubmit} schema={schema}>\n        <Input name=\"name\" placeholder=\"Seu nome\" />\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n        <Input name=\"password\" type=\"password\" placeholder=\"Sua senha secreta\" />\n\n        <button type=\"submit\">{loading ? 'Cadastrar' : 'Carregando...'}</button>\n        <Link to='/'>Já tenho conta</Link>\n      </Form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}